plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'edu.sc.seis.version-class' version '1.3.0'
}

group = 'ru.danilakondr'
version = '0.6.1'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'org.apache.commons:commons-lang3:3.14.0'
    implementation 'org.apache.commons:commons-text:1.11.0'
    implementation 'commons-cli:commons-cli:1.7.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(18)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'ru.danilakondr.templater.cli.Main'
}

run {
    standardInput = System.in
}

tasks.register('findLibreOffice', Copy) {
    Properties pLOProp = new Properties()
    File fLOProp = java.nio.file.Path.of(
            rootDir.getCanonicalPath(),
            "libreoffice.properties")
            .toFile()
    if (fLOProp.exists()) {
        FileInputStream input = new FileInputStream(fLOProp)
        pLOProp.load(input)
        input.close()
    }

    String libreOfficeHome = pLOProp.getProperty("libreoffice.classes", null)
    if (libreOfficeHome == null)
        libreOfficeHome = System.getenv("LIBREOFFICE_CLASSES")
    if (libreOfficeHome == null) {
        String platform = System.getProperty("os.name").toLowerCase()
        if (platform.startsWith("windows")) {
            var root = java.nio.file.Path.of(System.getenv("WINDIR"), "..")
                    .normalize()
                    .toString()
            var p1 = java.nio.file.Path.of(root,
                    "Program Files",
                    "LibreOffice", "program", "classes")
                    .toFile()

            if (!p1.exists()) {
                var p2 = java.nio.file.Path.of(root,
                        "Program Files (x86)",
                        "LibreOffice", "program", "classes")
                        .toFile()
                if (p2.exists())
                    libreOfficeHome = p2.getCanonicalPath()
            }
            else libreOfficeHome = p1.getCanonicalPath()
        } else if (platform.startsWith("linux")) {
            var libLO = java.nio.file.Path.of(
                    "usr", "lib", "libreoffice", "program", "classes")
                    .toFile()

            if (!libLO.exists()) {
                var opt = java.nio.file.Path.of("opt").toFile()
                libreOfficeHome = opt.listFiles()
                        .findAll { it.toPath().getFileName()
                                .startsWith("libreoffice") }
                        .collect {it.getCanonicalPath() }
                        .max()
            }
        } else if (platform.startsWith("mac os x")) {
            var resJava = java.nio.file.Path.of(
                    "Applications", "LibreOffice.cli",
                    "Contents", "Resources", "java"
            ).toFile()

            if (resJava.exists())
                libreOfficeHome = resJava.getCanonicalPath()
        }
    }
    if (libreOfficeHome == null) {
        throw new Exception("Failed to find LibreOffice")
    }

    from(libreOfficeHome) {
        include 'juh.jar'
        include 'jurt.jar'
        include 'ridl.jar'
        include 'unoil.jar'
        include 'unoloader.jar'
        include 'java_uno.jar'
        include 'libreoffice.jar'
    }
    into('libs')
}

compileJava.dependsOn findLibreOffice
